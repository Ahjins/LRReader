<ResourceDictionary
	x:Class="LRReader.UWP.Resources.Templates"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="using:LRReader.UWP.Views.Controls"
	xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
	xmlns:muxc="using:Microsoft.UI.Xaml.Controls">

	<Style BasedOn="{StaticResource DefaultModernInputStyle}" TargetType="controls:ModernInput" />

	<Style x:Key="GroupedModernInputStyle" BasedOn="{StaticResource DefaultModernInputStyle}" TargetType="controls:ModernInput">
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="BorderBrush" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="CornerRadius" Value="0" />
		<Setter Property="Transitions" Value="{x:Null}" />
		<Setter Property="TextMargin" Value="0,5,0,5" />
	</Style>

	<Style x:Key="DefaultModernInputStyle" TargetType="controls:ModernInput">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="{StaticResource ExpanderHeaderPadding}" />
		<Setter Property="Background" Value="{ThemeResource ExpanderHeaderBackground}" />
		<Setter Property="BorderBrush" Value="{ThemeResource ExpanderHeaderBorderBrush}" />
		<Setter Property="BorderThickness" Value="{ThemeResource ExpanderHeaderBorderThickness}" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="TextMargin" Value="0,16,0,16" />
		<Setter Property="Transitions">
			<Setter.Value>
				<TransitionCollection>
					<RepositionThemeTransition IsStaggeringEnabled="False" />
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:ModernInput">
					<Grid
						x:Name="Root"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BackgroundSizing="InnerBorderEdge"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<Grid.Resources>
							<Thickness x:Key="RadioButtonsTopHeaderMargin">0</Thickness>
							<converters:StringVisibilityConverter x:Key="StringVisibilityConverter" />
							<converters:BoolNegationConverter x:Key="BoolNegationConverter" />
							<converters:EmptyObjectToObjectConverter x:Key="EmptyObjectToObjectConverter" EmptyValue="Collapsed" NotEmptyValue="Visible" />
							<Style BasedOn="{StaticResource DefaultToggleSwitchStyle}" TargetType="ToggleSwitch">
								<Setter Property="Template" Value="{StaticResource LeftContentToggleSwitch}" />
							</Style>
						</Grid.Resources>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
							<ColumnDefinition MaxWidth="400" />
						</Grid.ColumnDefinitions>

						<Grid.BackgroundTransition>
							<BrushTransition Duration="0:0:0.083" />
						</Grid.BackgroundTransition>
						<FontIcon
							Margin="0,0,16,0"
							FontFamily="{StaticResource SymbolThemeFontFamily}"
							Glyph="{x:Bind Glyph, Mode=OneWay}"
							Visibility="{Binding Glyph, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource StringVisibilityConverter}}" />
						<ContentPresenter Margin="0,0,16,0" Content="{x:Bind Icon, Mode=OneWay}" Visibility="{Binding Icon, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource EmptyObjectToObjectConverter}}" />
						<StackPanel Grid.Column="1" Margin="{TemplateBinding TextMargin}" VerticalAlignment="Center">
							<TextBlock Text="{x:Bind Title, Mode=OneWay}" />
							<TextBlock
								FontSize="12" FontWeight="SemiBold"
								Foreground="{ThemeResource TextFillColorSecondaryBrush}"
								Text="{x:Bind Description, Mode=OneWay}"
								TextWrapping="WrapWholeWords"
								Visibility="{Binding Description, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource StringVisibilityConverter}}" />
						</StackPanel>
						<ContentPresenter
							Grid.Column="2" Margin="0,0,16,0"
							HorizontalAlignment="{x:Bind InputHorizontalAlignment, Mode=OneWay}"
							VerticalAlignment="Center"
							Content="{x:Bind Control, Mode=OneWay}" />
						<FontIcon
							Grid.Column="2" Margin="0,0,16,0" HorizontalAlignment="Right"
							VerticalAlignment="Center"
							FontFamily="{StaticResource SymbolThemeFontFamily}"
							FontSize="14"
							Glyph="{x:Bind RightGlyph, Mode=OneWay}"
							Visibility="{x:Bind IsButton}" />

						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushPressed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBackgroundDisabled}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource ButtonBorderBrushDisabled}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="controls:ModernGroup">
		<Setter Property="Margin" Value="0,0,0,32" />
		<Setter Property="Transitions">
			<Setter.Value>
				<TransitionCollection>
					<RepositionThemeTransition IsStaggeringEnabled="False" />
				</TransitionCollection>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:ModernGroup">
					<StackPanel>
						<StackPanel.Resources>
							<DataTemplate x:Key="ModernTemplate" x:DataType="UIElement">
								<ContentPresenter Content="{x:Bind}" Visibility="{x:Bind Visibility, Mode=OneWay}" />
							</DataTemplate>
							<DataTemplate x:Key="GenericTemplate" x:DataType="UIElement">
								<ContentPresenter Padding="8" Content="{x:Bind}" Visibility="{x:Bind Visibility, Mode=OneWay}" />
							</DataTemplate>
							<DataTemplate x:Key="InfoBarTemplate" x:DataType="muxc:InfoBar">
								<ContentPresenter Padding="8" Content="{x:Bind}" Visibility="{x:Bind IsOpen, Mode=OneWay}" />
							</DataTemplate>
							<converters:StringVisibilityConverter x:Key="StringVisibilityConverter" />
							<controls:ModernGroupItemTemplateSelector x:Key="TemplateSelector" GenericTemplate="{StaticResource GenericTemplate}" ModernTemplate="{StaticResource ModernTemplate}" />
						</StackPanel.Resources>
						<TextBlock
							Margin="1,0,0,8" FontWeight="Bold"
							Text="{x:Bind Title, Mode=OneWay}"
							Visibility="{Binding Title, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource StringVisibilityConverter}}" />
						<ListView ItemTemplateSelector="{StaticResource TemplateSelector}" ItemsSource="{x:Bind Content, Mode=OneWay}" SelectionMode="None">
							<ListView.ItemContainerStyle>
								<Style TargetType="ListViewItem">
									<Setter Property="HorizontalContentAlignment" Value="Stretch" />
									<Setter Property="Padding" Value="0" />
									<Setter Property="Margin" Value="0" />
								</Style>
							</ListView.ItemContainerStyle>
							<ListView.ItemsPanel>
								<ItemsPanelTemplate>
									<StackPanel Spacing="3" />
								</ItemsPanelTemplate>
							</ListView.ItemsPanel>
							<ListView.ItemContainerTransitions>
								<TransitionCollection>
									<RepositionThemeTransition IsStaggeringEnabled="False" />
								</TransitionCollection>
							</ListView.ItemContainerTransitions>
						</ListView>
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  https://github.com/microsoft/microsoft-ui-xaml/blob/main/dev/TabView/TabView_v1.xaml#L231  -->
	<Style x:Key="TabViewCloseButtonStyle" TargetType="Button">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="FontFamily" Value="{ThemeResource SymbolThemeFontFamily}" />
		<Setter Property="FontWeight" Value="Normal" />
		<Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
		<Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
		<Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
		<Setter Property="FocusVisualMargin" Value="-3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<ContentPresenter
						x:Name="ContentPresenter"
						Padding="{TemplateBinding Padding}"
						HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
						VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
						AutomationProperties.AccessibilityView="Raw"
						Background="{TemplateBinding Background}"
						BackgroundSizing="{TemplateBinding BackgroundSizing}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Content="{TemplateBinding Content}"
						ContentTemplate="{TemplateBinding ContentTemplate}"
						ContentTransitions="{TemplateBinding ContentTransitions}"
						CornerRadius="{TemplateBinding CornerRadius}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<Storyboard>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBackgroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonForegroundPointerOver}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonBackgroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource TabViewItemHeaderCloseButtonForegroundPressed}" />
										</ObjectAnimationUsingKeyFrames>
										<PointerDownThemeAnimation Storyboard.TargetName="ContentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</ContentPresenter>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--  https://github.com/microsoft/microsoft-ui-xaml/blob/main/dev/TabView/TabView_v1.xaml#L378  -->
	<ControlTemplate x:Key="MicaTabViewItemTemplate" TargetType="controls:ModernTab">
		<Grid x:Name="LayoutRoot" Padding="{TemplateBinding Padding}">
			<!--  This item will cover the separator on its left side.  -->
			<Grid.ColumnDefinitions>
				<ColumnDefinition x:Name="LeftColumn" Width="0" />
				<ColumnDefinition Width="*" />
				<ColumnDefinition x:Name="RightColumn" Width="0" />
			</Grid.ColumnDefinitions>

			<Grid.RenderTransform>
				<ScaleTransform x:Name="LayoutRootScale" />
			</Grid.RenderTransform>

			<Grid
				x:Name="TabContainer" Grid.Column="1"
				Padding="{ThemeResource TabViewItemHeaderPadding}"
				Background="{ThemeResource TabViewItemHeaderBackground}"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="1" Control.IsTemplateFocusTarget="True"
				CornerRadius="{ThemeResource OverlayCornerRadius}"
				FocusVisualMargin="{TemplateBinding FocusVisualMargin}">

				<Grid.BackgroundTransition>
					<BrushTransition Duration="0:0:0.083" />
				</Grid.BackgroundTransition>

				<Grid.ColumnDefinitions>
					<ColumnDefinition x:Name="IconColumn" Width="Auto" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Viewbox
					x:Name="IconBox"
					MaxWidth="{ThemeResource TabViewItemHeaderIconSize}"
					MaxHeight="{ThemeResource TabViewItemHeaderIconSize}"
					Margin="{ThemeResource TabViewItemHeaderIconMargin}">
					<ContentControl
						x:Name="IconControl"
						Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TabViewTemplateSettings.IconElement}"
						Foreground="{ThemeResource TabViewItemIconForeground}"
						HighContrastAdjustment="None" IsTabStop="False" />
				</Viewbox>

				<ContentPresenter
					x:Name="ContentPresenter" Grid.Column="1"
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
					Content="{TemplateBinding Header}"
					ContentTemplate="{TemplateBinding HeaderTemplate}"
					ContentTransitions="{TemplateBinding ContentTransitions}"
					FontSize="{ThemeResource TabViewItemHeaderFontSize}"
					FontWeight="{TemplateBinding FontWeight}"
					Foreground="{ThemeResource TabViewItemHeaderForeground}"
					HighContrastAdjustment="None" OpticalMarginAlignment="TrimSideBearings" />

				<Button
					x:Name="CloseButton" Grid.Column="2"
					Width="{ThemeResource TabViewItemHeaderCloseButtonSize}"
					Height="{ThemeResource TabViewItemHeaderCloseButtonSize}"
					Margin="{ThemeResource TabViewItemHeaderCloseMargin}"
					Background="{ThemeResource TabViewItemHeaderCloseButtonBackground}"
					Content="&#xE711;"
					FontSize="{ThemeResource TabViewItemHeaderCloseFontSize}"
					Foreground="{ThemeResource TabViewItemHeaderCloseButtonForeground}"
					HighContrastAdjustment="None" IsTabStop="False" IsTextScaleFactorEnabled="False"
					Style="{StaticResource TabViewCloseButtonStyle}" />
			</Grid>

			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />

					<VisualState x:Name="PointerOver">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlAltFillColorTertiary}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPointerOver}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPointerOverCloseButtonForeground}" />
						</VisualState.Setters>
					</VisualState>

					<VisualState x:Name="Pressed">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlAltFillColorQuarternary}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPressed}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderPressedCloseButtonForeground}" />
						</VisualState.Setters>
					</VisualState>

					<VisualState x:Name="Selected">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlFillColorDefaultBrush}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundSelected}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundSelected}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
							<Setter Target="LayoutRoot.Background" Value="Transparent" />
						</VisualState.Setters>
					</VisualState>

					<VisualState x:Name="PointerOverSelected">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlFillColorSecondaryBrush}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlElevationBorderBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPointerOver}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPointerOver}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
							<Setter Target="LayoutRoot.Background" Value="Transparent" />
						</VisualState.Setters>
					</VisualState>

					<VisualState x:Name="PressedSelected">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource ControlFillColorTertiaryBrush}" />
							<Setter Target="TabContainer.BorderBrush" Value="{ThemeResource ControlStrokeColorDefaultBrush}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundPressed}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemIconForegroundPressed}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderSelectedCloseButtonForeground}" />
							<Setter Target="LayoutRoot.Background" Value="Transparent" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>

				<VisualStateGroup x:Name="DisabledStates">
					<VisualState x:Name="Enabled" />

					<VisualState x:Name="Disabled">
						<VisualState.Setters>
							<Setter Target="TabContainer.Background" Value="{ThemeResource TabViewItemHeaderBackgroundDisabled}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
							<Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabViewItemHeaderForegroundDisabled}" />
							<Setter Target="IconControl.Foreground" Value="{ThemeResource TabViewButtonForegroundDisabled}" />
							<Setter Target="CloseButton.Background" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonBackground}" />
							<Setter Target="CloseButton.Foreground" Value="{ThemeResource TabViewItemHeaderDisabledCloseButtonForeground}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>

				<VisualStateGroup x:Name="DataVirtualizationStates">
					<VisualState x:Name="DataAvailable" />

					<VisualState x:Name="DataPlaceholder" />
				</VisualStateGroup>

				<VisualStateGroup x:Name="ReorderHintStates">
					<VisualState x:Name="NoReorderHint" />

					<VisualState x:Name="BottomReorderHint">
						<Storyboard>
							<DragOverThemeAnimation Direction="Bottom" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="TopReorderHint">
						<Storyboard>
							<DragOverThemeAnimation Direction="Top" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="RightReorderHint">
						<Storyboard>
							<DragOverThemeAnimation Direction="Right" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="LeftReorderHint">
						<Storyboard>
							<DragOverThemeAnimation Direction="Left" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint" />
					</VisualStateGroup.Transitions>
				</VisualStateGroup>

				<VisualStateGroup x:Name="DragStates">
					<VisualState x:Name="NotDragging" />

					<VisualState x:Name="Dragging">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity"
								To="{ThemeResource ListViewItemDragThemeOpacity}"
								Duration="0" />
							<DragItemThemeAnimation TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="DraggingTarget" />

					<VisualState x:Name="MultipleDraggingPrimary" />

					<VisualState x:Name="MultipleDraggingSecondary" />

					<VisualState x:Name="DraggedPlaceholder" />

					<VisualState x:Name="Reordering">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity"
								To="{ThemeResource ListViewItemReorderThemeOpacity}"
								Duration="0:0:0.240" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="ReorderingTarget">
						<Storyboard>
							<DoubleAnimation
								Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity"
								To="{ThemeResource ListViewItemReorderTargetThemeOpacity}"
								Duration="0:0:0.240" />
							<DoubleAnimation
								Storyboard.TargetName="LayoutRootScale" Storyboard.TargetProperty="ScaleX"
								To="{ThemeResource ListViewItemReorderTargetThemeScale}"
								Duration="0:0:0.240" />
							<DoubleAnimation
								Storyboard.TargetName="LayoutRootScale" Storyboard.TargetProperty="ScaleY"
								To="{ThemeResource ListViewItemReorderTargetThemeScale}"
								Duration="0:0:0.240" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="MultipleReorderingPrimary" />

					<VisualState x:Name="ReorderedPlaceholder">
						<Storyboard>
							<FadeOutThemeAnimation TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualState x:Name="DragOver">
						<Storyboard>
							<DropTargetItemThemeAnimation TargetName="LayoutRoot" />
						</Storyboard>
					</VisualState>

					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
					</VisualStateGroup.Transitions>
				</VisualStateGroup>

				<VisualStateGroup x:Name="IconStates">
					<VisualState x:Name="Icon" />
					<VisualState x:Name="NoIcon">
						<VisualState.Setters>
							<Setter Target="IconBox.Visibility" Value="Collapsed" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>

				<VisualStateGroup x:Name="TabWidthModes">
					<VisualState x:Name="StandardWidth" />

					<VisualState x:Name="Compact">
						<VisualState.Setters>
							<Setter Target="IconBox.Margin" Value="0,0,0,0" />
							<Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
							<Setter Target="IconColumn.Width" Value="{ThemeResource TabViewItemHeaderIconSize}" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>

				<VisualStateGroup x:Name="CloseIconStates">
					<VisualState x:Name="CloseButtonVisible" />
					<VisualState x:Name="CloseButtonCollapsed">
						<VisualState.Setters>
							<Setter Target="CloseButton.Visibility" Value="Collapsed" />
						</VisualState.Setters>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Grid>
	</ControlTemplate>

	<!--  https://github.com/microsoft/microsoft-ui-xaml/blob/main/dev/TabView/TabView_v1.xaml#L14  -->
	<ControlTemplate xmlns:primitives="using:Microsoft.UI.Xaml.Controls.Primitives" x:Key="MicaTabViewTemplate" TargetType="muxc:TabView">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="*" />
			</Grid.RowDefinitions>

			<Grid x:Name="TabContainerGrid" Background="{TemplateBinding Background}" XYFocusKeyboardNavigation="Enabled">

				<Grid.ColumnDefinitions>
					<ColumnDefinition x:Name="LeftContentColumn" Width="Auto" />
					<ColumnDefinition x:Name="TabColumn" Width="Auto" />
					<ColumnDefinition x:Name="AddButtonColumn" Width="Auto" />
					<ColumnDefinition x:Name="RightContentColumn" Width="*" />
				</Grid.ColumnDefinitions>

				<ContentPresenter
					x:Name="LeftContentPresenter" Grid.Column="0"
					Content="{TemplateBinding TabStripHeader}"
					ContentTemplate="{TemplateBinding TabStripHeaderTemplate}" />

				<Grid x:Name="ShadowReceiver" Grid.ColumnSpan="4" />

				<primitives:TabViewListView
					x:Name="TabListView" Grid.Column="1"
					Padding="{TemplateBinding Padding}"
					AllowDrop="{TemplateBinding AllowDropTabs}"
					CanDragItems="{TemplateBinding CanDragTabs}"
					CanReorderItems="{TemplateBinding CanReorderTabs}"
					ItemTemplate="{TemplateBinding TabItemTemplate}"
					ItemTemplateSelector="{TemplateBinding TabItemTemplateSelector}"
					ItemsSource="{TemplateBinding TabItemsSource}" />

				<Button
					x:Name="AddButton" Grid.Column="2" VerticalAlignment="Stretch"
					Command="{TemplateBinding AddTabButtonCommand}"
					CommandParameter="{TemplateBinding AddTabButtonCommandParameter}"
					Content="&#xE710;" HighContrastAdjustment="None" IsTextScaleFactorEnabled="False"
					Visibility="{Binding IsAddTabButtonVisible, RelativeSource={RelativeSource TemplatedParent}}" />

				<Border
					Grid.Column="2" Width="1" Height="16"
					Margin="-1,0,3,8" VerticalAlignment="Bottom"
					Background="{ThemeResource DividerStrokeColorDefaultBrush}" />

				<ContentPresenter
					x:Name="RightContentPresenter" Grid.Column="3" HorizontalAlignment="Stretch"
					Content="{TemplateBinding TabStripFooter}"
					ContentTemplate="{TemplateBinding TabStripFooterTemplate}" />

			</Grid>

			<!--  We don't want this to take space on the second row in case the user isn't using tab content.  -->
			<Grid
				x:Name="ShadowCaster" Grid.Row="0" Height="10"
				Margin="0,0,0,-10" VerticalAlignment="Bottom" Background="Transparent" />

			<ContentPresenter
				x:Name="TabContentPresenter" Grid.Row="1"
				BorderBrush="{TemplateBinding BorderBrush}"
				BorderThickness="{TemplateBinding BorderThickness}" />
		</Grid>
	</ControlTemplate>

</ResourceDictionary>

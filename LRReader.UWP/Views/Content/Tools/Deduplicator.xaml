<UserControl
	x:Class="LRReader.UWP.Views.Content.Tools.Deduplicator"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="using:LRReader.UWP.Views.Controls"
	xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:internal="using:LRReader.Internal"
	xmlns:items="using:LRReader.Shared.Models.Main"
	xmlns:items1="using:LRReader.UWP.Views.Items"
	xmlns:local="using:LRReader.UWP.Views.Tabs.Content"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
	DataContext="{Binding DeduplicatorToolViewModelInstance, Source={StaticResource Locator}}"
	mc:Ignorable="d">
	<UserControl.Resources>
		<converters:BoolNegationConverter x:Key="BoolNegationConverter" />
		<converters:EmptyStringToObjectConverter x:Key="EmptyStringToObjectConverter" EmptyValue="False" NotEmptyValue="True" />
		<internal:NegateBoolToVisibilityConverter x:Key="NegateBoolToVisibilityConverter" />
	</UserControl.Resources>

	<GridView Padding="24,10" ItemsSource="{x:Bind Data.Items}">
		<GridView.Header>
			<StackPanel MaxWidth="1000">
				<controls:ModernGroup Margin="0">
					<controls:ModernExpander Title="Deduplicator">
						<controls:ModernInput Title="Pixel Threshold" Description="Pixel's difference need to be at least this to count as different">
							<muxc:NumberBox
								MinWidth="100"
								IsEnabled="{x:Bind Data.ExecuteCommand.IsRunning, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
								LargeChange="10" Maximum="255" Minimum="0"
								SmallChange="1" SpinButtonPlacementMode="Inline"
								Value="{x:Bind Data.PixelThreshold, Mode=TwoWay}" />
						</controls:ModernInput>
						<controls:ModernInput Title="Image Difference Limit" Description="Image's difference need to be less than this to be considered equal" InputHorizontalAlignment="Stretch">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Slider
									IsEnabled="{x:Bind Data.ExecuteCommand.IsRunning, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
									IsThumbToolTipEnabled="False" Maximum="100" Minimum="0"
									TickPlacement="None"
									Value="{x:Bind Data.PercentDifference, Mode=TwoWay}" />
								<TextBlock
									Grid.Column="1" Margin="8,0,0,0" HorizontalAlignment="Right"
									VerticalAlignment="Center">
									<Run Text="{x:Bind Data.PercentDifference, Mode=OneWay}" />%
								</TextBlock>
							</Grid>
						</controls:ModernInput>
						<controls:ModernInput Title="Resolution (Width)">
							<muxc:NumberBox
								MinWidth="100"
								IsEnabled="{x:Bind Data.ExecuteCommand.IsRunning, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
								Maximum="500" Minimum="4" SmallChange="1"
								SpinButtonPlacementMode="Inline"
								Value="{x:Bind Data.Resolution, Mode=TwoWay}" />
						</controls:ModernInput>
						<controls:ModernInput Title="Aspect Ratio Limit" InputHorizontalAlignment="Stretch">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Slider
									IsEnabled="{x:Bind Data.ExecuteCommand.IsRunning, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
									IsThumbToolTipEnabled="False" LargeChange="0.1" Maximum="0.5"
									Minimum="0" SmallChange="0.01" StepFrequency="0.01"
									TickPlacement="None"
									Value="{x:Bind Data.AspectRatioLimit, Mode=TwoWay}" />
								<TextBlock
									Grid.Column="1" Margin="8,0,0,0" HorizontalAlignment="Right"
									VerticalAlignment="Center"
									Text="{x:Bind Data.AspectRatioLimit, Mode=OneWay}" />
							</Grid>
						</controls:ModernInput>
						<CheckBox Content="Grayscale" IsChecked="{x:Bind Data.Grayscale, Mode=OneWay}" IsEnabled="False" />
					</controls:ModernExpander>
					<controls:ModernInput Title="Worker Threads">
						<ComboBox x:Name="WorkerThreads" IsEnabled="{x:Bind Data.ExecuteCommand.IsRunning, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}" SelectedValue="{x:Bind Data.Threads, Mode=TwoWay}" />
					</controls:ModernInput>
					<controls:ModernInput Title="Request delay per thread" Description="Time in milliseconds">
						<muxc:NumberBox
							IsEnabled="{x:Bind Data.ExecuteCommand.IsRunning, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}"
							Maximum="1000" Minimum="0" SpinButtonPlacementMode="Inline"
							Value="{x:Bind Data.Delay, Mode=TwoWay}" />
					</controls:ModernInput>
					<StackPanel>
						<TextBlock Margin="0,0,0,10">
							<Run Text="Step" />
							<Run Text="{x:Bind Data.CurrentStep, Mode=OneWay}" />
							<Run Text="of" />
							<Run Text="{x:Bind Data.MaxSteps, Mode=OneWay}" />
						</TextBlock>
						<muxc:ProgressBar Margin="0,0,0,5" Maximum="{x:Bind Data.MaxSteps, Mode=OneWay}" Value="{x:Bind Data.CurrentStep, Mode=OneWay}" />
					</StackPanel>
					<StackPanel>
						<StackPanel Margin="0,0,0,10" Orientation="Horizontal">
							<TextBlock Text="{x:Bind Data.ToolStatus.ToString(), Mode=OneWay}" />
							<TextBlock Visibility="{x:Bind Data.Indeterminate, Mode=OneWay, Converter={StaticResource NegateBoolToVisibilityConverter}}">
								<Run />
								<Run Text="{x:Bind Data.CurrentProgress, Mode=OneWay}" />
								<Run Text="of" />
								<Run Text="{x:Bind Data.MaxProgress, Mode=OneWay}" />
							</TextBlock>
						</StackPanel>
						<muxc:ProgressBar
							Margin="0,0,0,5"
							IsIndeterminate="{x:Bind Data.Indeterminate, Mode=OneWay}"
							Maximum="{x:Bind Data.MaxProgress, Mode=OneWay}"
							Value="{x:Bind Data.CurrentProgress, Mode=OneWay}" />
					</StackPanel>
					<StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
						<TextBlock Margin="0,0,10,0" VerticalAlignment="Center">
							<Run Text="Estimated time:" />
							<Run Text="{x:Bind Data.EstimatedTime, Mode=OneWay}" />
						</TextBlock>
						<Button Command="{x:Bind Data.ExecuteCommand}" Content="Execute" IsEnabled="{x:Bind Data.ExecuteCommand.IsRunning, Mode=OneWay, Converter={StaticResource BoolNegationConverter}}" />
					</StackPanel>
				</controls:ModernGroup>
				<muxc:InfoBar
						Title="{x:Bind Data.ErrorTitle, Mode=OneWay}"
						IsClosable="False"
						IsOpen="{x:Bind Data.ErrorTitle, Mode=OneWay, Converter={StaticResource EmptyStringToObjectConverter}}"
						Message="{x:Bind Data.ErrorDescription, Mode=OneWay}"
						Severity="Error" />
			</StackPanel>
		</GridView.Header>
		<GridView.Resources>
			<SolidColorBrush x:Key="GridViewItemRevealBackground" Color="Transparent" />
		</GridView.Resources>
		<GridView.ItemTemplate>
			<DataTemplate x:DataType="items:ArchiveHit">
				<items1:ArchiveHitItem />
			</DataTemplate>
		</GridView.ItemTemplate>
		<GridView.ItemsPanel>
			<ItemsPanelTemplate>
				<ItemsWrapGrid HorizontalAlignment="Center" Orientation="Horizontal" />
			</ItemsPanelTemplate>
		</GridView.ItemsPanel>
		<GridView.ItemContainerStyle>
			<Style TargetType="GridViewItem">
				<Setter Property="Padding" Value="0" />
				<Setter Property="Margin" Value="5" />
			</Style>
		</GridView.ItemContainerStyle>
		<GridView.ItemContainerTransitions>
			<TransitionCollection>
				<PopupThemeTransition FromVerticalOffset="200" />
				<ReorderThemeTransition />
				<RepositionThemeTransition />
			</TransitionCollection>
		</GridView.ItemContainerTransitions>
	</GridView>
</UserControl>

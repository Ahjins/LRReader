name: Release
on:
  release:
    types: [published]
jobs:
  buildAppxBundle:
    name: Build AppInstaller and Bundle
    runs-on: windows-2019
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Prepare Env
      uses: microsoft/setup-msbuild@v1.0.2
    - name: Build AppInstaller
      env:
        CERT_PASSWORD: ${{ secrets.CERT_PASSWORD }}
        CERT_GPG: ${{ secrets.CERT_GPG }}
        CERT_BASE64: ${{ secrets.CERT_BASE64 }}
        APPCENTER_APP_ID: ${{ secrets.APPCENTER_APP_ID }}
      run: |
        Move-Item -Path "./Util/Package.appxmanifest" -Destination "$(Get-Location)/LRReader.UWP/Package.appxmanifest" -Force
        [xml]$xmlDoc = Get-Content "./LRReader.UWP/Package.appxmanifest"
        Set-Content -NoNewline -Path "./version.txt" -Value $xmlDoc.Package.Identity.Version
        [IO.File]::WriteAllBytes("./Cert.pfx.gpg", [Convert]::FromBase64String("${env:CERT_BASE64}"))
        & "C:\Program Files\Git\usr\bin\gpg.exe" --quiet --batch --yes --decrypt --passphrase="${env:CERT_GPG}" --output Cert.pfx Cert.pfx.gpg
        Invoke-Expression "./Util/ConfigureAppCenter.ps1"
        MSBuild LRReader.UWP\LRReader.UWP.csproj -nologo -r -v:minimal /p:Configuration=Release /p:DefineConstants="TRACE%3BNETFX_CORE%3BWINDOWS_UWP%3BSIDELOAD" /p:UapAppxPackageBuildMode="SideloadOnly" /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint="" /p:PackageCertificateKeyFile="..\Cert.pfx" /p:PackageCertificatePassword="${env:CERT_PASSWORD}" /p:GenerateAppInstallerFile=True /p:AppInstallerUri="https://s3.guerra24.net/projects/lrr/$($xmlDoc.Package.Identity.Version)"
        Remove-Item -Path "./Cert.pfx.gpg","./Cert.pfx"
        Invoke-Expression "./Util/CleanInstaller.ps1"
    - name: Prepare for upload
      run: ./Util/PrepareForUpload.ps1
    - name: Upload Symbols
      env:
        APPCENTER_TOKEN: ${{ secrets.APPCENTER_TOKEN }}
      run: |
        npm install -g appcenter-cli
        Set-Location "./LRReader.UWP/AppPackages/LRReader.UWP"
        foreach ($file in $(Get-ChildItem *.appxsym -File)) { appcenter crashes upload-symbols --app Guerra24/LRReader --appxsym $file --token ${env:APPCENTER_TOKEN} }
        Remove-Item $(Get-ChildItem *.appxsym -File)
    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: LRReader
        path: LRReader.UWP/AppPackages
    - name: Upload Version
      uses: actions/upload-artifact@v2
      with:
        name: Version
        path: version.txt
    - name: Upload to Release
      uses: Shopify/upload-to-release@master
      with:
        name: LRReader.appinstaller
        path: LRReader.UWP/AppPackages/LRReader.UWP.appinstaller
        repo-token: ${{ secrets.GITHUB_TOKEN }}
  uploadToS3:
    name: Upload Release
    needs: buildAppxBundle
    runs-on: ubuntu-18.04
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: LRReader
          path: AppPackages
      - name: Download Version
        uses: actions/download-artifact@v2
        with:
          name: Version
      - name: Setup Envs
        run: echo "DEST_DIR=projects/lrr/$(cat version.txt)" >> $GITHUB_ENV
      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "us-east-1"
          SOURCE_DIR: "AppPackages"